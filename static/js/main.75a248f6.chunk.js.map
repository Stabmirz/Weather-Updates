{"version":3,"sources":["componants/Icon.js","App.js","componants/HourleyWeather.js","index.js"],"names":["Icon","props","react_default","a","createElement","icon","className","width","height","src","concat","alt","Time","currentDate","Date","now","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","url","state","givenLocation","axios","get","then","response","setState","data","weather","i","list","length","push","days","dt","dayTemp","Math","round","temp","day","nightTemp","night","minTemp","min","maxTemp","max","humidity","pressure","wind","speed","description","icons","city","name","country","newLocation","event","preventDefault","newLocationValue","newInputLocation","value","undefined","_this2","_this$state","onSubmit","defaultValue","type","ref","input","dist_default","format","App_Time","lib_default","ticking","map","item","Link","key","to","style","textDecoration","marginTop","unix","componants_Icon","Component","HourleyWeather","dateTime","main","temp_min","temp_max","HourleyWeather_Time","AppRouter","BrowserRouter","Route","path","exact","component","src_App_0","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75a248f6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Icon = props => (\n    <div>\n        { \t\n            props.icon &&\n            <i className=\"icon\"><img width=\"150px\" height=\"150px\" src={'http://openweathermap.org/img/w/'+`${props.icon}`+'.png'} alt=\"weater-icon\"/></i>\n        }\n    </div>\n);\n\nexport default Icon;","\nimport React,{Component}from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport Clock from 'react-live-clock';\nimport Icon from \"./componants/Icon\";\n\nconst Time = () => {\n  let currentDate = Date.now();\n  return (<span>{currentDate}</span>);\n};\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      givenLocation: \"Miami,US\",\n      city:undefined,\n      country:undefined,\n      weather:[]\n    };\n  }\n\n  fetchData = () => {\n    const url = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.givenLocation}&APPID=fbf712a5a83d7305c3cda4ca8fe7ef29&units=metric&cnt=16`;\n   \n    axios.get(url).then(response => {\n      this.setState({\n        data: response.data\n      });\n\n      const  weather = [];\n\n      for (let i = 0; i < this.state.data.list.length; i = i+1) {\n        weather.push({\n        days: this.state.data.list[i].dt,\n        dayTemp: Math.round(this.state.data.list[i].temp.day),\n        nightTemp : Math.round(this.state.data.list[i].temp.night),\n        minTemp: Math.round(this.state.data.list[i].temp.min),\n        maxTemp : Math.round(this.state.data.list[i].temp.max),\n        humidity: Math.round(this.state.data.list[i].humidity),\n        pressure: Math.round(this.state.data.list[i].pressure),\n        wind: Math.round(this.state.data.list[i].speed),\n        description: this.state.data.list[i].weather[0].description,\n        icons: this.state.data.list[i].weather[0].icon\n      })\n      }\n      //  console.log(this.state.data);\n\n      this.setState({\n        city: this.state.data.city.name,\n        country: this.state.data.city.country,\n        weather,\n      });\n    });\n  };\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  newLocation = event => {\n    event.preventDefault();\n    const newLocationValue = this.newInputLocation.value;\n    this.setState(\n      {\n        givenLocation: newLocationValue\n      },\n      () => {\n        this.fetchData();\n      }\n    );\n  };\n\n\n\n  render(){\n    const {weather, givenLocation, city, country,} = this.state;\n    return (\n      <div className=\"main\">\n       <p className=\"location-input\">Enter Location </p>\n        <form className=\"form\" onSubmit={this.newLocation}>\n          <div >\n            <input className=\"input\"\n              defaultValue={givenLocation}\n              type=\"text\"\n              ref={input => (this.newInputLocation = input)}\n            /><br></br>\n            <button className=\"action\">Get Weather</button>\n          </div>\n        </form>\n        <hr/>\n        <div className=\"date\">\n          <Moment format=\"ddd MMMM Do YYYY\"><Time/></Moment>\n        </div>\n        <div className=\"clock\">\n          <Clock format={'HH:mm:ss'} ticking={true} />\n        </div>\n        <div className=\"text\">\n          <div><strong><span>{city}, </span><span>{country}</span></strong></div>\n        </div>\n        <div className=\"body\">\n         {weather.map(item => {\n              return (\n                <Link key= {item.days} to=\"/hourley-updates/\" style={{ textDecoration: 'none' }}>\n                <div className=\"days\">\n                  <div style={{marginTop:\"30px\"}}><b><Moment unix format=\"dddd \">{item.days}</Moment></b></div>\n                    <span style={{marginTop:\"30px\"}}><Moment unix format=\" MMMM Do YYYY \">{item.days}</Moment></span>\n                    <div>\n                      <p><b>Day Temperature : </b> {item.dayTemp}°C</p>\n                      <p><b>Night Temperature : </b>{item.nightTemp}°C</p>\n                    </div>\n                    <div><Icon icon={item.icons}/></div>\n                    <div>\n                      <p><b>Max Temp. : </b>{item.maxTemp}°C</p>\n                      <p><b>Min temp. : </b>{item.minTemp}°C</p>\n                      <p><b>Humidity : </b>{item.humidity}%</p>\n                      <p><b>Pressure : </b>{item.humidity}hpa</p>\n                      <p><b>Wind : </b>{item.wind}m/s</p>\n                      <p><b>Description : </b>{item.description}</p>\n                      <p></p>\n                    </div>\n                  </div>\n                </Link>\n                );\n            })}\n          </div>\n          <hr/>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React,{Component}from \"react\";\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport Clock from 'react-live-clock';\nimport Icon from \"./Icon\";\n\nconst Time = () =>{\n  let currentDate = Date.now();\n  return(<span>{currentDate}</span>)\n}\n\nclass HourleyWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      givenLocation: \"Miami,US\",\n      city:undefined,\n      country:undefined,\n      weather:[],\n    };\n  }\n\n  fetchData = () => {\n\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.givenLocation}&APPID=b292bd2a578c27b2e97bbb03b7515a95&units=metric`;\n\n    axios.get(url).then(response => {\n      this.setState({\n        data: response.data\n      });\n\n      const weather = [];\n\n      for (let i = 0; i < this.state.data.list.length; i = i + 1) {\n          weather.push({\n          dateTime:this.state.data.list[i].dt,\n          temp:Math.round(this.state.data.list[i].main.temp),\n          minTemp: Math.round(this.state.data.list[i].main.temp_min),\n          maxTemp : Math.round(this.state.data.list[i].main.temp_max),\n          humidity : this.state.data.list[i].main.humidity,\n          pressure : this.state.data.list[i].main.pressure,\n          wind: this.state.data.list[i].wind.speed,\n          description: this.state.data.list[i].weather[0].description,\n          icons: this.state.data.list[i].weather[0].icon\n        })\n      }\n      \n      //console.log(this.state.data);\n\n      this.setState({\n        city: this.state.data.city.name,\n        country: this.state.data.city.country,\n        weather,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  newLocation = event => {\n    event.preventDefault();\n    const newLocation = this.newInputLocation.value;\n    this.setState(\n      {\n        givenLocation: newLocation\n      },\n      () => {\n        this.fetchData();\n      }\n    );\n  };\n\n  render() {\n    const {weather,givenLocation,city, country,} = this.state;\n    return (\n      <div className=\"main\">\n        <p className=\"location-input\">Enter Location </p>\n        <form className=\"form\" onSubmit={this.newLocation}>\n          <div>\n            <input className=\"input\"\n              defaultValue={givenLocation}\n              type=\"text\"\n              ref={input => (this.newInputLocation = input)}\n            /><br></br>\n            <button className=\"action\">Get Weather</button>\n          </div>\n        </form>\n        <hr/>\n        <div className=\"date\">\n          <Moment format=\"ddd MMMM Do YYYY\"><Time/></Moment>\n          <p className=\"clock\"><Clock format={'HH:mm:ss'} ticking={true} /></p>\n        </div>\n      <div className=\"text\">\n         <div><strong><span>{city}, </span><span>{country}</span></strong></div>\n      </div>\n          <div className=\"body\">\n           {weather.map(item => {\n                return (\n                  <div key= {item.dateTime} className=\"days\" >\n                    <div style={{marginTop:\"30px\"}}><b><Moment unix format=\"ddd MMMM Do YYYY hA \">{item.dateTime}</Moment></b></div><br></br>\n                    <div><b>Temperature :</b> {item.temp}°C</div>\n                    <div><Icon icon={item.icons}/></div>\n                    <div>\n                      <p><b>Max temp. : </b>{item.maxTemp}°C</p>\n                      <p><b>Min temp. : </b>{item.minTemp}°C</p>\n                      <p><b>Humidity : </b>{item.humidity}%</p>\n                      <p><b>Pressure : </b>{item.humidity}hpa</p>\n                      <p><b>Wind : </b>{item.wind}m/s</p>\n                      <p><b>Description : </b>{item.description}</p>\n                      <p></p>\n                    </div>\n                  </div>\n                );\n            })}\n          </div>\n          <hr/>\n      </div>\n    );\n  }\n}\nexport default HourleyWeather;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport HourleyWeather from './componants/HourleyWeather';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div>\n        <nav>\n        <Link to=\"/daily-updates\"><button className=\"action\">Daily Updates</button></Link>           \n        <Link to=\"/hourley-updates/\"><button className=\"action\">Hourly Updates</button></Link>\n        </nav>\n\n        <Route path=\"/daily-updates\" exact component={App} />\n        <Route path=\"/hourley-updates/\" component={HourleyWeather} />\n        <App/>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default AppRouter;\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\n\nif (module.hot) {\n    module.hot.accept();\n}\n  "],"sourceRoot":""}